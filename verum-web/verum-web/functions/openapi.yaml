openapi: 3.1.0
info:
  title: Verum Omnis Web API
  version: "1.0.0"
  description: |
    Stateless, hash-first endpoints for verify, rules, anchor, receipts, sealing and chat.
servers:
  - url: https://YOUR_HOST/api
paths:
  /v1/verify:
    get:
      summary: Return signed core manifest
      responses:
        "200":
          description: OK
  /v1/verify-rules:
    get:
      summary: Return signed rules manifest (9 brains)
      responses:
        "200":
          description: OK
  /v1/anchor:
    post:
      summary: Issue a signed anchor receipt for a SHA-512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                  minLength: 64
                  description: SHA-512 hex
      responses:
        "200":
          description: Signed receipt
  /v1/receipt:
    get:
      summary: Fetch a signed receipt for a SHA-512
      parameters:
        - in: query
          name: hash
          required: true
          schema:
            type: string
            minLength: 64
      responses:
        "200":
          description: Signed receipt
  /v1/seal:
    post:
      summary: Generate a Verum Omnis sealed PDF
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                title:
                  type: string
                notes:
                  type: string
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                hash:
                  type: string
                title:
                  type: string
                notes:
                  type: string
      responses:
        "200":
          description: PDF
          content:
            application/pdf: {}
  /v1/chat:
    post:
      summary: Verum-mode chat with AI provider selection
      description: |
        Multi-provider AI chat endpoint supporting OpenAI (with triple consensus),
        Anthropic Claude (including claude-sonnet-4), and DeepSeek.
        
        OpenAI provider uses triple consensus with models: gpt-5-mini, gpt-4o-mini, gpt-4o.
        Anthropic supports claude-sonnet-4, claude-3-5-haiku-20241022, and other Claude models.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messages
              properties:
                provider:
                  type: string
                  enum:
                    - openai
                    - anthropic
                    - deepseek
                  description: AI provider selection (default: openai)
                model:
                  type: string
                  description: |
                    Optional model override. Examples:
                    - OpenAI: gpt-5-mini, gpt-4o-mini, gpt-4o
                    - Anthropic: claude-sonnet-4, claude-3-5-haiku-20241022
                    - DeepSeek: deepseek-chat
                temperature:
                  type: number
                  minimum: 0
                  maximum: 2
                  default: 0.2
                  description: Sampling temperature for response generation
                messages:
                  type: array
                  items:
                    type: object
                    required:
                      - role
                      - content
                    properties:
                      role:
                        type: string
                        enum:
                          - system
                          - user
                          - assistant
                      content:
                        type: string
      responses:
        "200":
          description: Chat response with provider-specific result
  /health:
    get:
      summary: Health probe
      responses:
        "200":
          description: OK
components: {}